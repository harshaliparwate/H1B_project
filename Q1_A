

//  1 a) Is the number of petitions with Data Engineer job title increasing over time?
// Data sets
// 1	CERTIFIED-WITHDRAWN	UNIVERSITY OF MICHIGAN	BIOCHEMISTS AND BIOPHYSICISTS	POSTDOCTORAL RESEARCH FELLOW	N	
// 36067	2016	ANN ARBOR, MICHIGAN	-83.7430378	42.2808256
 

import org.apache.hadoop.io.Text;

import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Reducer;

import org.apache.hadoop.conf.*;
import org.apache.hadoop.fs.*;
import org.apache.hadoop.mapreduce.lib.input.*;
import org.apache.hadoop.mapreduce.lib.output.*;

import java.io.*;

public class Q1_a {
	
	public static class MapClass extends Mapper<LongWritable,Text,Text,LongWritable>
	   {
		
		
		private LongWritable val = new LongWritable(1);
		
	      public void map(LongWritable key, Text value, Context context)
	      {	    	  
	         try{
	         
	            if(key.get()>0)
	            {
	            	String[] str = value.toString().split("\t");
	            	
	            	if(str[4]!=null  && str[4].contains("DATA ENGINEER") && str[7]!=null && str[7]!="NA")
	            	{
	            		Text data = new Text ("DATA ENGINEER"+","+str[7]);
	            		
	            	context.write(data, val);
	            	} 
	            }
	         }
	         catch(Exception e)
	         {
	            System.out.println(e.getMessage());
	         }
	      }
	   }
	
	
	
	  public static class ReduceClass extends Reducer<Text,LongWritable,Text,LongWritable>
	   {
		  
		 
		long total_count=0;
		int i=0;
		String [] year= {"2011","2012","2013","2014","2015","2016"};
		long [] yearcount= new long [year.length];
		  
		    public void reduce(Text key, Iterable<LongWritable> values,Context context) throws IOException, InterruptedException
		    {
	
		         for (LongWritable value : values)
		         {   
		        	total_count+=value.get();
		         }
		         yearcount[i++]=total_count;
		      	
            }
		    
			protected void cleanup(Context context) throws IOException,
			InterruptedException 
			{
			
				for (i=0;i<6;i++)
				{
					if(i==0)
					{
						context.write(new Text(year[i]), new LongWritable(0));
					}
					else
					{
						context.write(new Text(year[i]), new LongWritable((yearcount[i]-yearcount[i-1])*100/yearcount[i-1]));
					}
					
					
				}	
			}
		    
		    
	   }
	  public static void main(String[] args) throws Exception {
		    Configuration conf = new Configuration();
		    
		    //conf.set("name", "value")
		    //conf.set("mapreduce.input.fileinputformat.split.minsize", "134217728");
		    Job job = Job.getInstance(conf, "Data Enigineers growth");
		    job.setJarByClass(Q1_a.class);
		    job.setMapperClass(MapClass.class);
		    //job.setCombinerClass(ReduceClass.class);
		   job.setReducerClass(ReduceClass.class);
		    //job.setNumReduceTasks(0);
		   
		   job.setMapOutputKeyClass(Text.class);
		   job.setMapOutputValueClass(LongWritable.class);
		   
		    job.setOutputKeyClass(Text.class);
		    job.setOutputValueClass(LongWritable.class);
		    
		    FileInputFormat.addInputPath(job, new Path(args[0]));
		    FileOutputFormat.setOutputPath(job, new Path(args[1]));
		    System.exit(job.waitForCompletion(true) ? 0 : 1);
		  }
}
